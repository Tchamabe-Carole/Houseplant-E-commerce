{"ast":null,"code":"import { createSlice } from '@reduxjs/toolkit';\nconst initialState = {\n  items: [],\n  totalQuantity: 0,\n  totalAmount: 0\n};\nexport const cartSlice = createSlice({\n  name: 'cart',\n  initialState,\n  reducers: {\n    addToCart: (state, action) => {\n      const newItem = action.payload;\n      const existingItem = state.items.find(item => item.id === newItem.id);\n      if (!existingItem) {\n        // Add new item with quantity 1\n        state.items.push({\n          ...newItem,\n          quantity: 1,\n          totalPrice: newItem.price\n        });\n      } else {\n        // Increment existing item\n        existingItem.quantity++;\n        existingItem.totalPrice = existingItem.price * existingItem.quantity;\n      }\n\n      // Update cart totals\n      state.totalQuantity++;\n      state.totalAmount = calculateCartTotal(state.items);\n    },\n    increaseItemQuantity: (state, action) => {\n      const id = action.payload;\n      const existingItem = state.items.find(item => item.id === id);\n      if (existingItem) {\n        existingItem.quantity++;\n        existingItem.totalPrice = existingItem.price * existingItem.quantity;\n        state.totalQuantity++;\n        state.totalAmount = calculateCartTotal(state.items);\n      }\n    },\n    decreaseItemQuantity: (state, action) => {\n      const id = action.payload;\n      const existingItem = state.items.find(item => item.id === id);\n      if (existingItem) {\n        if (existingItem.quantity === 1) {\n          // Remove item if quantity becomes 0\n          state.items = state.items.filter(item => item.id !== id);\n        } else {\n          existingItem.quantity--;\n          existingItem.totalPrice = existingItem.price * existingItem.quantity;\n        }\n        state.totalQuantity--;\n        state.totalAmount = calculateCartTotal(state.items);\n      }\n    },\n    removeFromCart: (state, action) => {\n      const id = action.payload;\n      const existingItem = state.items.find(item => item.id === id);\n      if (existingItem) {\n        state.totalQuantity -= existingItem.quantity;\n        state.items = state.items.filter(item => item.id !== id);\n        state.totalAmount = calculateCartTotal(state.items);\n      }\n    }\n  }\n});\n\n// Helper function to calculate cart total\nconst calculateCartTotal = items => {\n  return items.reduce((total, item) => total + item.totalPrice, 0);\n};\nexport const {\n  addToCart,\n  increaseItemQuantity,\n  decreaseItemQuantity,\n  removeFromCart\n} = cartSlice.actions;\nexport default cartSlice.reducer;","map":{"version":3,"names":["createSlice","initialState","items","totalQuantity","totalAmount","cartSlice","name","reducers","addToCart","state","action","newItem","payload","existingItem","find","item","id","push","quantity","totalPrice","price","calculateCartTotal","increaseItemQuantity","decreaseItemQuantity","filter","removeFromCart","reduce","total","actions","reducer"],"sources":["C:/Users/cmart/Downloads/houseplant_ecommerce_app/src/redux/cartSlice.js"],"sourcesContent":["import { createSlice } from '@reduxjs/toolkit';\n\nconst initialState = {\n  items: [],\n  totalQuantity: 0,\n  totalAmount: 0\n};\n\nexport const cartSlice = createSlice({\n  name: 'cart',\n  initialState,\n  reducers: {\n    addToCart: (state, action) => {\n      const newItem = action.payload;\n      const existingItem = state.items.find(item => item.id === newItem.id);\n      \n      if (!existingItem) {\n        // Add new item with quantity 1\n        state.items.push({\n          ...newItem,\n          quantity: 1,\n          totalPrice: newItem.price\n        });\n      } else {\n        // Increment existing item\n        existingItem.quantity++;\n        existingItem.totalPrice = existingItem.price * existingItem.quantity;\n      }\n      \n      // Update cart totals\n      state.totalQuantity++;\n      state.totalAmount = calculateCartTotal(state.items);\n    },\n    \n    increaseItemQuantity: (state, action) => {\n      const id = action.payload;\n      const existingItem = state.items.find(item => item.id === id);\n      \n      if (existingItem) {\n        existingItem.quantity++;\n        existingItem.totalPrice = existingItem.price * existingItem.quantity;\n        state.totalQuantity++;\n        state.totalAmount = calculateCartTotal(state.items);\n      }\n    },\n    \n    decreaseItemQuantity: (state, action) => {\n      const id = action.payload;\n      const existingItem = state.items.find(item => item.id === id);\n      \n      if (existingItem) {\n        if (existingItem.quantity === 1) {\n          // Remove item if quantity becomes 0\n          state.items = state.items.filter(item => item.id !== id);\n        } else {\n          existingItem.quantity--;\n          existingItem.totalPrice = existingItem.price * existingItem.quantity;\n        }\n        \n        state.totalQuantity--;\n        state.totalAmount = calculateCartTotal(state.items);\n      }\n    },\n    \n    removeFromCart: (state, action) => {\n      const id = action.payload;\n      const existingItem = state.items.find(item => item.id === id);\n      \n      if (existingItem) {\n        state.totalQuantity -= existingItem.quantity;\n        state.items = state.items.filter(item => item.id !== id);\n        state.totalAmount = calculateCartTotal(state.items);\n      }\n    }\n  }\n});\n\n// Helper function to calculate cart total\nconst calculateCartTotal = (items) => {\n  return items.reduce((total, item) => total + item.totalPrice, 0);\n};\n\nexport const { addToCart, increaseItemQuantity, decreaseItemQuantity, removeFromCart } = cartSlice.actions;\nexport default cartSlice.reducer;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}